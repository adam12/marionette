#
#
# This is our input file.
#
# As you can guess comments are prefixed with a "#", and they are ignored
# entirely.
#
###########



#
# The general form of this input-file is a set of rules:
#
#   $MODULE {
#              name => "NAME OF RULE",
#              arg_1 => "Value 1 ... ",
#              arg_2 => [ "array values", "are fine" ],
#              arg_3 => "Value 3 .. ",
#   }
#
#  There are a couple of modules supported at the moment:
#
#   file -  Working with files
#
#   directory - Working with directories
#
#   package - Working with packages (NOP)
#
#   shell   - Executing shell commands (NOP)
#
#
# Dependencies must be specified within the rules, manually, for
# example if you need to run a command only when a directory is
# present you'd do this:
#
#    directory{ name => "Create /tmp", target => "/tmp" }
#
#    shell{ name => "Test", command = "uptime > /tmp/uptime",
#           dependencies => [ "Create /tmp" ]
#
#


#
# Now follows some test rules
#

#
#  Create a directory.
#
#  Each action has a "name", and a per-module set of key/values
#
#  The names must be (globally?) unique.
#
directory { name   => "ok",
            target => "/tmp/blah",
            mode   => "0755", }


directory { name   => "ok",
            target => "/tmp/blah/meow/cat/dog",
            mode   => "0777", }


directory { name => "/tmp",
    target => "/tmp",
}

#
# Create a file, from the given template.
#
file {  name => "title goes here",
        target => "/tmp/steve.txt",
        content => "https://steve.fi/",
        requires => "/tmp" ,
}


#
# Here we have a resource which requires two dependencies,
# identified by names.
#
package { name => "Install this because I want it",
          package => "less",
          state => "installed",
          requires => [ "title goes here", "ok" ] }




#
# Shell resources run only when triggered, or if a dependency
# is updated.
#
shell { name => "I get ignored, mostly",
        command => "touch /tmp/test.me" }

shell { name => "I get ignored,",
        command => "uptime > /tmp/up"}
